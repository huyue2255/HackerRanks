'use strict';var zmq=require("../../"),frontPort="tcp://127.0.0.1:12345",backPort="tcp://127.0.0.1:12346";function createClient(c){var a=zmq.socket("req");a.identity="client"+process.pid;a.on("message",function(b){console.log(a.identity+": answer data "+b)});a.connect(c);console.log("client connected!");setInterval(function(){var b=Math.floor(100*Math.random());console.log(a.identity+": asking "+b);a.send(b)},100)}
function createServer(c){var a=zmq.socket("rep");a.identity="server"+process.pid;a.on("message",function(b){console.log(a.identity+": received "+b.toString());a.send(2*b)});a.connect(c,function(a){if(a)throw a;console.log("server connected!")})}
function createQueueDevice(c,a){var b=zmq.socket("router"),d=zmq.socket("dealer");b.identity="router"+process.pid;d.identity="dealer"+process.pid;b.bind(c,function(a){console.log("bound",c)});b.on("message",function(){console.log("router: sending to server",arguments[0].toString(),arguments[2].toString());d.send(Array.prototype.slice.call(arguments))});d.bind(a,function(b){console.log("bound",a)});d.on("message",function(){console.log("dealer: sending to client",arguments[0].toString(),arguments[2].toString());
b.send(Array.prototype.slice.call(arguments))})}createQueueDevice(frontPort,backPort);createClient(frontPort);createServer(backPort);