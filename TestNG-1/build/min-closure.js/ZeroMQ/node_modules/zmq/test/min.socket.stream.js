'use strict';var zmq=require(".."),http=require("http"),should=require("should"),semver=require("semver");
describe("socket.stream",function(){it("should support a stream socket type",function(d){if(semver.gte(zmq.version,"4.0.0")&&semver.lt(zmq.version,"4.1.3")){var c=zmq.socket("stream");c.on("message",function(b,a){a.should.be.an.instanceof(Buffer);String(a).split("\r\n")[0].split(" ")[0].should.equal("GET");c.send([b,'HTTP/1.0 200 OK\r\nContent-Type: text/html\r\n\r\n\x3c!DOCTYPE html\x3e\x3chead\x3e\x3cmeta charset\x3d"UTF-8"\x3e\x3c/head\x3e\x3cbody\x3e\x3cp\x3ederpin over protocols\x3c/p\x3e\x3c/body\x3e\x3c/html\x3e'])});c.bind("tcp://127.0.0.1:5513",
function(b){if(b)throw b;http.get("http://127.0.0.1:5513/aRandomRequestPath",function(a){semver.gte(process.versions.node,"0.11.0")?a.socket._readableState.reading.should.be.false:semver.gte(process.versions.node,"0.10.0")&&a.socket._readableState.reading.should.be.true;a.on("data",function(a){a.should.be.an.instanceof(Buffer);String(a).should.equal('\x3c!DOCTYPE html\x3e\x3chead\x3e\x3cmeta charset\x3d"UTF-8"\x3e\x3c/head\x3e\x3cbody\x3e\x3cp\x3ederpin over protocols\x3c/p\x3e\x3c/body\x3e\x3c/html\x3e');
d()})})})}else return d(),console.warn("stream socket type in libzmq v4+")})});