'use strict';var zmq=require(".."),should=require("should"),semver=require("semver");
describe("socket.push-pull",function(){it("should support push-pull",function(e){var b=zmq.socket("push"),c=zmq.socket("pull"),d=0;c.on("message",function(a){a.should.be.an.instanceof(Buffer);switch(d++){case 0:a.toString().should.equal("foo");break;case 1:a.toString().should.equal("bar");break;case 2:a.toString().should.equal("baz"),c.close(),b.close(),e()}});c.bind("inproc://stuff",function(a){if(a)throw a;b.connect("inproc://stuff");b.send("foo");b.send("bar");b.send("baz")})});it("should not emit messages after pause()",
function(e){var b=zmq.socket("push"),c=zmq.socket("pull"),d=0;c.on("message",function(a){0===d++?a.toString().should.equal("foo"):should.not.exist(a)});c.bind("inproc://pause_stuff",function(a){if(a)throw a;b.connect("inproc://pause_stuff");b.send("foo");c.pause();b.send("bar");b.send("baz")});setTimeout(function(){c.close();b.close();e()},100)});it("should be able to read messages after pause()",function(e){var b=zmq.socket("push"),c=zmq.socket("pull"),d=["bar","foo"];c.bind("inproc://pause_stuff",
function(a){if(a)throw a;b.connect("inproc://pause_stuff");c.pause();d.forEach(function(a){b.send(a)});d.forEach(function(a){c.read().toString().should.eql(a)})});setTimeout(function(){c.close();b.close();e()},100)});it("should emit messages after resume()",function(e){function b(a){should.not.exist(a)}function c(b){b.should.be.an.instanceof(Buffer);switch(f++){case 0:b.toString().should.equal("foo");break;case 1:b.toString().should.equal("bar");break;case 2:b.toString().should.equal("baz"),a.close(),
d.close(),e()}}var d=zmq.socket("push"),a=zmq.socket("pull"),f=0;a.on("message",b);a.bind("inproc://resume_stuff",function(e){if(e)throw e;d.connect("inproc://resume_stuff");a.pause();d.send("foo");d.send("bar");d.send("baz");setTimeout(function(){a.removeListener("message",b);a.on("message",c);a.resume()},100)})})});