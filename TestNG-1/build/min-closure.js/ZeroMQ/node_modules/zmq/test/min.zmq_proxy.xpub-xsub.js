'use strict';var zmq=require(".."),should=require("should"),semver=require("semver"),addr="tcp://127.0.0.1",frontendAddr=addr+":5507",backendAddr=addr+":5508",captureAddr=addr+":5509",version=semver.gte(zmq.version,"3.1.0");
describe("proxy.xpub-xsub",function(){it("should proxy pub-sub connected to xpub-xsub",function(b){if(!version)return b(),console.warn("Test requires libzmq \x3e\x3d 3.1.0");var d=zmq.socket("xpub"),e=zmq.socket("xsub"),c=zmq.socket("sub"),f=zmq.socket("pub");c.subscribe("");c.on("message",function(a){d.close();e.close();c.close();f.close();a.should.be.an.instanceof(Buffer);a.toString().should.equal("foo");b()});d.bind(frontendAddr,function(a){if(a)throw a;e.bind(backendAddr,function(a){if(a)throw a;
c.connect(frontendAddr);f.connect(backendAddr);setTimeout(function(){f.send("foo")},200);zmq.proxy(d,e)})})});it("should proxy connections with capture",function(b){if(!version)return b(),console.warn("Test requires libzmq \x3e\x3d 3.1.0");var d=zmq.socket("xpub"),e=zmq.socket("xsub"),c=zmq.socket("pub"),f=zmq.socket("sub"),a=zmq.socket("sub"),g=zmq.socket("pub");a.subscribe("");a.on("message",function(c){a.close();g.close();e.close();d.close();c.should.be.an.instanceof(Buffer);c.toString().should.equal("foo")});
f.subscribe("");f.on("message",function(a){c.close();f.close();setTimeout(function(){a.should.be.an.instanceof(Buffer);a.toString().should.equal("foo");b()},100)});c.bind(captureAddr,function(b){if(b)throw b;d.bind(frontendAddr,function(b){if(b)throw b;e.bind(backendAddr,function(b){if(b)throw b;g.connect(backendAddr);a.connect(frontendAddr);f.connect(captureAddr);setTimeout(function(){g.send("foo")},200);zmq.proxy(d,e,c)})})})});it("should throw an error if the order is wrong",function(b){if(!version)return b(),
console.warn("Test requires libzmq \x3e\x3d 3.1.0");var d=zmq.socket("xpub"),e=zmq.socket("xsub"),c=zmq.socket("sub"),f=zmq.socket("pub");d.bindSync(frontendAddr);e.bindSync(backendAddr);c.connect(frontendAddr);f.connect(backendAddr);try{zmq.proxy(e,d)}catch(a){a.message.should.equal("wrong socket order to proxy")}finally{d.close(),e.close(),f.close(),c.close(),setTimeout(function(){b()},200)}})});