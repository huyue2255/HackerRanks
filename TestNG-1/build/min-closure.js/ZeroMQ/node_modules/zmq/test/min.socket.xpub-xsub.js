'use strict';var zmq=require(".."),should=require("should"),semver=require("semver");
describe("socket.xpub-xsub",function(){it("should support pub-sub tracing and filtering",function(h){if(!semver.gte(zmq.version,"3.1.0"))return h(),console.warn("Test requires libzmq \x3e\x3d 3.1.0");var f=0,k=0,b=zmq.socket("pub"),c=zmq.socket("sub"),d=zmq.socket("xpub"),e=zmq.socket("xsub");b.bindSync("tcp://*:5556");e.connect("tcp://127.0.0.1:5556");d.bindSync("tcp://*:5555");c.connect("tcp://127.0.0.1:5555");e.on("message",function(a){d.send(a)});d.on("message",function(a){a.should.be.an.instanceof(Buffer);
var f=0===a[0]?"unsubscribe":"subscribe",g=a.slice(1).toString();switch(f){case "subscribe":switch(k++){case 0:g.should.equal("js");break;case 1:g.should.equal("luna")}break;case "unsubscribe":switch(k++){case 2:g.should.equal("luna"),c.close(),b.close(),e.close(),d.close(),h()}}e.send(a)});c.on("message",function(a){a.should.be.an.instanceof(Buffer);switch(f++){case 0:a.toString().should.equal("js is cool");break;case 1:a.toString().should.equal("luna is cool too")}});c.subscribe("js");c.subscribe("luna");
setTimeout(function(){b.send("js is cool");b.send("ruby is meh");b.send("py is pretty cool");b.send("luna is cool too")},100);setTimeout(function(){c.unsubscribe("luna")},300)})});