'use strict';var zmq=require(".."),should=require("should"),semver=require("semver");
describe("exports",function(){it("should export a valid version",function(){semver.valid(zmq.version).should.be.ok});it("should generate valid curve keypair",function(a){try{zmq.socket("rep").curve_server=0}catch(c){console.log("libsodium seems to be missing (skipping curve test)");a();return}var b=zmq.curveKeypair();should.exist(b);should.exist(b.public);should.exist(b.secret);b.public.length.should.equal(40);b.secret.length.should.equal(40);a()});it("should export socket types and options",function(){var a=
"PUB SUB REQ XREQ REP XREP DEALER ROUTER PUSH PULL PAIR AFFINITY IDENTITY SUBSCRIBE UNSUBSCRIBE RCVTIMEO SNDTIMEO RATE RECOVERY_IVL SNDBUF RCVBUF RCVMORE FD EVENTS TYPE LINGER RECONNECT_IVL RECONNECT_IVL_MAX BACKLOG POLLIN POLLOUT POLLERR SNDMORE".split(" ");semver.satisfies(zmq.version,"2.x")&&a.concat(["HWM","SWAP","MCAST_LOOP","ZMQ_RECOVERY_IVL_MSEC","NOBLOCK"]);semver.gte(zmq.version,"3.0.0")&&a.concat("XPUB XSUB SNDHWM RCVHWM MAXMSGSIZE ZMQ_MULTICAST_HOPS TCP_KEEPALIVE TCP_KEEPALIVE_CNT TCP_KEEPALIVE_IDLE TCP_KEEPALIVE_INTVL".split(" "));
semver.gte(zmq.version,"3.2.0")&&a.concat("IPV4ONLY DELAY_ATTACH_ON_CONNECT ROUTER_MANDATORY XPUB_VERBOSE TCP_KEEPALIVE TCP_KEEPALIVE_IDLE TCP_KEEPALIVE_CNT TCP_KEEPALIVE_INTVL TCP_ACCEPT_FILTER LAST_ENDPOINT".split(" "));semver.gte(zmq.version,"3.3.0")&&a.concat(["ROUTER_RAW"]);a.forEach(function(a){zmq["ZMQ_"+a].should.be.a.Number})});it("should export states",function(){["STATE_READY","STATE_BUSY","STATE_CLOSED"].forEach(function(a){zmq[a].should.be.a.Number})});it("should export constructors",
function(){zmq.Context.should.be.a.Function;zmq.Socket.should.be.a.Function});it("should export methods",function(){zmq.socket.should.be.a.Function})});