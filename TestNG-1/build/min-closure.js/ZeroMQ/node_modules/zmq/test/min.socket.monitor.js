'use strict';var zmq=require(".."),should=require("should"),semver=require("semver");
describe("socket.monitor",function(){zmq.ZMQ_CAN_MONITOR?(it("should be able to monitor the socket",function(d){var a=zmq.socket("rep"),b=zmq.socket("req");a.on("message",function(e){e.should.be.an.instanceof(Buffer);e.toString().should.equal("hello");a.send("world")});var c=["listen","accept","disconnect","close"];c.forEach(function(e){a.on(e,function(b,f){f.toString().should.equal("tcp://127.0.0.1:5423");"disconnect"===e&&a.close();c.pop();0===c.length&&(a.unmonitor(),d())})});a.monitor();a.bind("tcp://127.0.0.1:5423",
function(a){if(a)throw a;});a.on("bind",function(){b.connect("tcp://127.0.0.1:5423");b.send("hello");b.on("message",function(a){a.should.be.an.instanceof(Buffer);a.toString().should.equal("world");b.close()})})}),it("should use default interval and numOfEvents",function(d){var a=zmq.socket("req");a.setsockopt(zmq.ZMQ_RECONNECT_IVL,5);var b;a.on("close",function(){b=Date.now()});a.on("connect_retry",function(){var c=Date.now()-b;a.unmonitor();a.close();c.should.be.within(10,20);d()});a.monitor();a.connect("tcp://127.0.0.1:5423")}),
it("should read multiple events on monitor interval",function(d){var a=zmq.socket("req");a.setsockopt(zmq.ZMQ_RECONNECT_IVL,5);var b;a.on("close",function(){b=Date.now()});a.on("connect_retry",function(){var c=Date.now()-b;a.unmonitor();a.close();c.should.be.within(0,5);d()});a.monitor(10,0);a.connect("tcp://127.0.0.1:5423")})):console.log("monitoring not enabled skipping test")});